{"version":3,"sources":["store/reducers/auth/types.ts","hooks/useTypedSelector.ts","assets/images/login/IMG_20210312_140957_174 2.png","components/login/style.ts","store/reducers/auth/action-creators.ts","store/reducers/hotels/types.ts","store/reducers/hotels/action-creators.ts","components/sort-button/enums.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/login/Login.tsx","assets/images/star-rating/Vector_star_active.svg","assets/images/star-rating/Vector_star_inactive.svg","components/star-rating/style.ts","components/star-rating/StarRating.tsx","assets/images/hotel-item/Vector_hearth_active.svg","components/favorite-item/style.ts","components/favorite-item/FavoriteItem.tsx","assets/images/sort-button/arrow_top_active.svg","constants/index.ts","assets/images/sort-button/arrow_bottom_inactive.svg","components/sort-button/style.ts","components/sort-button/SortButton.tsx","components/favorites/style.ts","components/favorites/Favorites.tsx","assets/images/hotel-item/Vector_home.svg","assets/images/hotel-item/Vector_top_arrow.svg","assets/images/hotel-item/Vector_hearth_inactive.svg","components/hotel-item/style.ts","components/hotel-item/HotelItem.tsx","assets/images/hotels-list/Vector.svg","components/hotels-list/style.ts","assets/images/hotels-slider/Rectangle 23.png","components/hotels-slider/style.ts","assets/images/hotels-slider/Rectangle 24.png","assets/images/hotels-slider/Rectangle 28.png","assets/images/hotels-slider/Rectangle 29.png","components/hotels-slider/HotelsSlider.tsx","router/index.ts","api/HotelsService.ts","components/hotels-list/HotelsList.tsx","assets/images/navbar/Vector (2).svg","assets/images/navbar/Vector (1).svg","assets/images/navbar/Vector (3).svg","components/navbar/style.ts","components/navbar/Navbar.tsx","components/search-form/style.ts","components/search-form/SearchForm.tsx","pages/hotels/style.ts","pages/Auth.tsx","pages/hotels/Hotels.tsx","components/AppRouter.tsx","App.tsx","store/reducers/hotels/index.ts","store/reducers/auth/index.ts","store/reducers/index.ts","saga/auth/workers.ts","saga/auth/index.ts","saga/auth/watchers.ts","saga/index.ts","store/index.ts","index.tsx"],"names":["AuthActionEnum","useTypedSelector","useSelector","LoginContainer","styled","section","bg","LoginForm","form","FormTitle","h1","LoginInputWrapper","div","PasswordInputWrapper","FormInput","input","props","error","FormLabel","label","FormButton","button","ErrorMessage","span","HotelsActionEnum","HotelsSortTypes","AuthActionCreators","setIsAuth","isAuth","type","SET_AUTH","payload","login","LOGIN","logout","LOGOUT","SornTypeEnum","HotelsActionCreators","setCurrentHotels","hotels","SET_CURRENT_HOTELS","setFavoriteHotels","SET_FAVORITE_HOTELS","addFavoriteHotels","hotel","ADD_FAVORITE_HOTEL","removeFavoriteHotels","REMOVE_FAVORITE_HOTEL","changeIsFavoriteOnCurrentHotel","hotelId","CHANGE_IS_FAVORITE_ON_CURRENT_HOTEL","sortFavotiteHotelsByRating","SORT_FAVORITE_HOTELS_BY_RATING","sortFavotiteHotelsByPrice","SORT_FAVORITE_HOTELS_BY_PRICE","setLocation","location","SET_LOCATION","allActionCreators","useActions","dispatch","useDispatch","bindActionCreators","Login","useForm","register","handleSubmit","errors","formState","console","log","className","onSubmit","required","pattern","password","minLength","StarsWrapper","ActiveStar","activeStar","InactiveStar","inactiveStar","StarRating","count","to","stars","i","push","map","star","FavoriteItemWrapper","FavoriteLogo","favotiteLogoActive","FavoriteItem","options","favoriteHotels","state","hotelsReducer","name","id","onClick","e","target","getAttribute","filter","favoriteHotel","date","day","month","year","days","rating","price","HotelsApi","SortButtonWrapper","isActive","SortButtonNav","SortButtonNavTop","arrowTopActive","arrowBottomInactive","SortButtonNavDown","SortButton","isSelf","activeRules","top","down","sort","INACTIVE","DOWN","UP","FavoritesWrapper","FavoritesTitle","h2","FavoritesSorting","RatingSorting","PriceSorting","FavoritesList","Favorites","useState","ratingSort","setRatingSort","priceSort","setPriceSort","allowOuterScroll","key","HotelItemWrapper","hotelLogo","hotelLogoHeader","favotiteLogoInactive","HotelItem","currentHotels","isFavorite","currenHotel","HotelsListWrapper","HotelsListTitleWrapper","SearchLocationWrapper","SearchLocationText","ArrivalDate","RightArrow","rightArrow","SliderWrapper","FavoritesInfo","SearchedHotelsList","SearchedHotel","SliderItemWrapper","SliderItem","image","image1","HotelsSlider","images","image2","image3","image4","dots","infinite","arrows","speed","variableWidth","slidesToScroll","RouteNames","HotelService","checkIn","checkOut","axios","get","GET_HOTELS","HotelsList","moment","locale","todayDateRu","format","todayDate","tomorrowDate","add","useEffect","a","getHotels","response","responseHotels","data","forEach","responseHotel","hotelName","priceAvg","length","currentHotel","NavbarWrapper","NavbarTitle","LogoutWrapper","Arrow","arrow","Bracket","bracket","Line","line","Navbar","SearchFormWrapper","SearchFromInput","SearchFromInputWrapper","SearchFormError","SearchFromLabel","SearchFromButton","SearchForm","daysCount","setDaysCount","dateError","setDateError","formSubmit","min","onChange","value","isAfter","isNumberMatch","match","HotelsContainer","HotelsWrapper","LeftSide","RightSide","Container","publicRoutes","path","AUTH","exact","component","privateRoutes","HOTELS","AppRouter","authReducer","route","App","localStorage","getItem","initialState","action","updatedHotels","b","loginWorker","logoutWorker","setItem","put","authWatcher","takeEvery","rootWatcher","all","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.32b23198.chunk.js","sourcesContent":["export interface AuthState {\n    isAuth: boolean;\n}\n\nexport enum AuthActionEnum {\n    SET_AUTH = 'SET_AUTH',\n    LOGIN = 'LOGIN',\n    LOGOUT = 'LOGOUT',\n}\n\nexport interface SetIsAuthAction {\n    type: AuthActionEnum.SET_AUTH;\n    payload: boolean;\n}\n\nexport type AuthAction = \nSetIsAuthAction","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport { RootState } from \"../store\";\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","export default __webpack_public_path__ + \"static/media/IMG_20210312_140957_174 2.23b15bc9.png\";","import styled from 'styled-components';\nimport bg from '../../assets/images/login/IMG_20210312_140957_174 2.png';\n\nexport const LoginContainer = styled.section`\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    background-image: url('${bg}');\n    background-repeat: no-repeat;\n    background-size: cover;\n\n    .blur {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        width: 100%;\n        heidth: 100%;\n        background-color: rgba(255,255,255,0.6);\n        backdrop-filter: blur(20px);\n    }\n`;\n\nexport const LoginForm = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 409px;\n    height: 382px;\n    padding: 32px;\n    background-color: white;\n    border-radius: 16px;\n`;\n\nexport const FormTitle = styled.h1`\n    font-weight: 500;\n    color: #424242;\n    -webkit-text-stroke: 1px #000000;\n    line-height: 28px;\n    margin-bottom: 32px;\n`;\n\nexport const LoginInputWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-bottom: 24px;\n`;\n\nexport const PasswordInputWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    margin-bottom: 32px;\n`;\n\nexport const FormInput = styled.input<{ error?: boolean }>`\n    height: 50px;\n    border: ${props => (props.error ? '1px solid #EB1717;' : '1px solid #C9CACC')};\n    border-radius: 4px;\n    padding: 16px;\n    font-size: 16px;\n    font-weight: 300;\n`;\n\nexport const FormLabel = styled.label<{ error?: boolean }>`\n    font-weight: 300;\n    font-size: 16px;\n    margin-bottom: 7px;\n    color: ${props => (props.error ? '#EB1717;' : '#424242')};\n`;\n\nexport const FormButton = styled.button`\n    width: 100%;\n    height: 50px;\n    color: #fff;\n    font-size: 16px;\n    font-weight: 500;\n    cursor: pointer;\n    border-radius: 4px;\n    background: linear-gradient(104.34deg, #41522E -15.34%, #BE8022 145.95%);\n`;\n\nexport const ErrorMessage = styled.span`\n    position: absolute;\n    bottom: -16px;\n    font-size: 12px;\n    color: #EB1717;\n`;\n","import { AuthActionEnum, SetIsAuthAction, } from './types';\n\nexport const AuthActionCreators = {\n    setIsAuth: (isAuth: boolean): SetIsAuthAction => {\n        return {\n            type: AuthActionEnum.SET_AUTH,\n            payload: isAuth\n        }\n    },\n    login: () => {\n        return {\n            type: AuthActionEnum.LOGIN,\n        }\n    },\n    logout: () => {\n        return {\n            type: AuthActionEnum.LOGOUT,\n        }\n    },\n}","import { Hotel } from \"../../../models/hotel\";\n\nexport interface HotelsState {\n    location: string;\n    currentHotels: Hotel[];\n    favoriteHotels: Hotel[];\n}\n\nexport enum HotelsActionEnum {\n    SET_CURRENT_HOTELS = 'SET_CURRENT_HOTELS',\n    SET_FAVORITE_HOTELS = 'SET_FAVORITE_HOTELS',\n    ADD_FAVORITE_HOTEL = 'ADD_FAVORITE_HOTEL',\n    CHANGE_IS_FAVORITE_ON_CURRENT_HOTEL = 'CHANGE_IS_FAVORITE_ON_CURRENT_HOTEL',\n    REMOVE_FAVORITE_HOTEL = 'REMOVE_FAVORITE_HOTEL',\n    SET_LOCATION = 'SET_LOCATION',\n    SORT_FAVORITE_HOTELS_BY_RATING = 'SORT_FAVORITE_HOTELS_BY_RATING',\n    SORT_FAVORITE_HOTELS_BY_PRICE = 'SORT_FAVORITE_HOTELS_BY_PRICE',\n}\n\nexport enum HotelsSortTypes {\n    UP = 'UP',\n    DOWN = 'DOWN',\n}\n\nexport interface SetCurrentHotelsAction {\n    type: HotelsActionEnum.SET_CURRENT_HOTELS;\n    payload: Hotel[];\n}\n\nexport interface SetFavoriteHotelsAction {\n    type: HotelsActionEnum.SET_FAVORITE_HOTELS;\n    payload: Hotel[];\n}\n\nexport interface SetLocationAction {\n    type: HotelsActionEnum.SET_LOCATION;\n    payload: string;\n}\n\nexport interface AddFavoriteHotelAction {\n    type: HotelsActionEnum.ADD_FAVORITE_HOTEL;\n    payload: Hotel;\n}\n\nexport interface RemoveFavoriteHotelAction {\n    type: HotelsActionEnum.REMOVE_FAVORITE_HOTEL;\n    payload: Hotel;\n}\n\nexport interface ChangeIsFavoriteOnCurrentHotelAction {\n    type: HotelsActionEnum.CHANGE_IS_FAVORITE_ON_CURRENT_HOTEL;\n    payload: string;\n}\n\nexport interface SortFavoriteHotelsByRatingAction {\n    type: HotelsActionEnum.SORT_FAVORITE_HOTELS_BY_RATING;\n    payload: string;\n}\n\nexport interface SortFavoriteHotelsByPriceAction {\n    type: HotelsActionEnum.SORT_FAVORITE_HOTELS_BY_PRICE;\n    payload: string;\n}\n\nexport type HotelsAction = \nSetCurrentHotelsAction |\nSetFavoriteHotelsAction |\nSetLocationAction |\nAddFavoriteHotelAction |\nRemoveFavoriteHotelAction |\nChangeIsFavoriteOnCurrentHotelAction |\nSortFavoriteHotelsByRatingAction |\nSortFavoriteHotelsByPriceAction","import { Hotel } from '../../../models/hotel';\nimport { AddFavoriteHotelAction, ChangeIsFavoriteOnCurrentHotelAction, HotelsActionEnum, HotelsSortTypes, RemoveFavoriteHotelAction, SetCurrentHotelsAction, SetFavoriteHotelsAction, SetLocationAction, SortFavoriteHotelsByPriceAction, SortFavoriteHotelsByRatingAction } from './types';\n\nexport const HotelsActionCreators = {\n    setCurrentHotels: (hotels: Hotel[]): SetCurrentHotelsAction => {\n        return {\n            type: HotelsActionEnum.SET_CURRENT_HOTELS,\n            payload: hotels\n        }\n    },\n    setFavoriteHotels: (hotels: Hotel[]): SetFavoriteHotelsAction => {\n        return {\n            type: HotelsActionEnum.SET_FAVORITE_HOTELS,\n            payload: hotels\n        }\n    },\n    addFavoriteHotels: (hotel: Hotel): AddFavoriteHotelAction => {\n        return {\n            type: HotelsActionEnum.ADD_FAVORITE_HOTEL,\n            payload: hotel\n        }\n    },\n    removeFavoriteHotels: (hotel: Hotel): RemoveFavoriteHotelAction => {\n        return {\n            type: HotelsActionEnum.REMOVE_FAVORITE_HOTEL,\n            payload: hotel\n        }\n    },\n    changeIsFavoriteOnCurrentHotel: (hotelId: string): ChangeIsFavoriteOnCurrentHotelAction => {\n        return {\n            type: HotelsActionEnum.CHANGE_IS_FAVORITE_ON_CURRENT_HOTEL,\n            payload: hotelId\n        }\n    },\n    sortFavotiteHotelsByRating: (type: HotelsSortTypes): SortFavoriteHotelsByRatingAction => {\n        return {\n            type: HotelsActionEnum.SORT_FAVORITE_HOTELS_BY_RATING,\n            payload: type\n        }\n    },\n    sortFavotiteHotelsByPrice: (type: HotelsSortTypes): SortFavoriteHotelsByPriceAction => {\n        return {\n            type: HotelsActionEnum.SORT_FAVORITE_HOTELS_BY_PRICE,\n            payload: type\n        }\n    },\n    setLocation: (location: string): SetLocationAction => {\n        return {\n            type: HotelsActionEnum.SET_LOCATION,\n            payload: location\n        }\n    },\n}","export enum SornTypeEnum {\n    UP = 'UP',\n    DOWN = 'DOWN',\n    INACTIVE = 'INACTIVE'\n}","import { AuthActionCreators } from \"./auth/action-creators\";\nimport { HotelsActionCreators } from \"./hotels/action-creators\";\n\nexport const allActionCreators = {\n    ...HotelsActionCreators,\n    ...AuthActionCreators\n}","import { useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\";\nimport { allActionCreators } from \"../store/reducers/action-creators\";\n\nexport const useActions = () => {\n    const dispatch = useDispatch();\n    \n    return bindActionCreators(allActionCreators, dispatch);\n}","import { FC } from 'react';\nimport { LoginForm, LoginContainer, FormTitle, LoginInputWrapper, PasswordInputWrapper, FormInput, FormLabel, FormButton, ErrorMessage } from './style';\nimport { useForm, SubmitHandler} from 'react-hook-form';\nimport { LoginFormType } from './types';\nimport { useActions } from '../../hooks/useActions';\n\nexport const Login: FC = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const { login } = useActions();\n\n    const formSubmit:  SubmitHandler<LoginFormType> = () => {\n        login();\n    }\n\n    console.log(errors);\n\n    return (\n        <LoginContainer>\n            <div className='blur'>\n                <LoginForm onSubmit={handleSubmit(formSubmit)}>\n                    <FormTitle>\n                        Simple Hotel Check\n                    </FormTitle>    \n                    <LoginInputWrapper>\n                        <FormLabel error={!!errors.login}>\n                            Логин\n                        </FormLabel>\n                        <FormInput \n                            type=\"text\"\n                            error={!!errors.login}\n                            {\n                                ...register(\n                                    'login',\n                                    {\n                                        required: true,\n                                        pattern: /^([a-z0-9_-]+\\.)*[a-z0-9_-]+@[a-z0-9_-]+(\\.[a-z0-9_-]+)*\\.[a-z]{2,6}$/\n                                    }\n                                )\n                            }\n                        />\n                        {errors.login && errors.login.type === 'required' && <ErrorMessage>Обязательное поле</ErrorMessage>}\n                        {errors.login && errors.login.type === 'pattern' && <ErrorMessage>Некорректный email</ErrorMessage>}\n                    </LoginInputWrapper>\n    \n                    <PasswordInputWrapper className=\"password-input\">\n                        <FormLabel error={!!errors.password}>\n                            Пароль\n                        </FormLabel>\n                        <FormInput\n                            type=\"text\"\n                            error={!!errors.password}\n                            {\n                                ...register(\n                                    'password',\n                                    {\n                                        required: true,\n                                        minLength: 8,\n                                        pattern: /^[^а-яё]+$/iu,\n                                    },\n                                )\n                            }\n                        />\n                        {errors.password && errors.password.type === 'required' && <ErrorMessage>Обязательное поле</ErrorMessage>}\n                        {errors.password && errors.password.type === 'minLength' && <ErrorMessage>Минимальная длина 8 символов</ErrorMessage>}\n                        {errors.password && errors.password.type === 'pattern' && <ErrorMessage>Только кириллица</ErrorMessage>}\n                    </PasswordInputWrapper>\n\n                    <FormButton type=\"submit\">\n                        Войти\n                    </FormButton>\n                </LoginForm>\n            </div> \n        </LoginContainer>\n    )\n}","export default __webpack_public_path__ + \"static/media/Vector_star_active.e3444657.svg\";","export default __webpack_public_path__ + \"static/media/Vector_star_inactive.859db9dd.svg\";","import styled from 'styled-components';\nimport activeStar from '../../assets/images/star-rating/Vector_star_active.svg';\nimport inactiveStar from '../../assets/images/star-rating/Vector_star_inactive.svg';\n\nexport const StarsWrapper = styled.div`\n    display: flex;\n    column-gap: 4px;\n`;\n\nexport const ActiveStar = styled.div`\n    width: 17px;\n    height: 17px;\n    background-image: url('${activeStar}');\n`;\n\nexport const InactiveStar = styled.div`\n    width: 17px;\n    height: 17px;\n    background-image: url('${inactiveStar}');\n`;","import { ActiveStar, InactiveStar, StarsWrapper } from \"./style\";\n\nexport const StarRating = ({count, to}: {count: number, to: number}) => {\n    const stars: any[] = [];\n\n    for (let i = 1; i <= to; i++) {\n        if (i > count) {\n            stars.push(<InactiveStar key={i} />)\n            \n            continue;\n        }\n\n        stars.push(<ActiveStar key={i} />);\n    }\n\n    return (\n        <StarsWrapper>\n            {stars.map((star: any) => {\n                return star;\n            })}\n        </StarsWrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/Vector_hearth_active.3d60a0c0.svg\";","import styled from 'styled-components';\nimport favotiteLogoActive from '../../assets/images/hotel-item/Vector_hearth_active.svg';\n\nexport const FavoriteItemWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    padding: 8px 0;\n    border-bottom: 1px solid rgba(135, 135, 135, 0.2);\n\n    .hotel-title {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 4px;\n    }\n\n    .hotel-title__name {\n        max-width: 240px;\n        font-weight: 300;\n        font-size: 17px;\n        line-height: 22px;\n        letter-spacing: -0.408px;\n        color: #424242;\n    }\n\n    .hotel-date {\n        font-size: 14px;\n        line-height: 22px;\n        letter-spacing: -0.408px;\n        color: #878787;\n        margin-bottom: 10px;    \n    }\n\n    .hotel-info {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    .hotel-info__price {\n        font-weight: 300;\n        font-size: 11px;\n        line-height: 22px;\n        letter-spacing: -0.408px;\n        color: #878787;\n    }\n\n    .hotel-info__price span {\n        font-size: 17px;\n        line-height: 22px;\n        text-align: right;\n        letter-spacing: -0.408px;\n        color: #424242;\n        margin-left: 12px;\n    }\n\n    .dash {\n        margin: 0 13px 0 15px; \n    }\n`;\n\nexport const FavoriteLogo = styled.div`\n    align-self: end;\n    width: 21px;\n    height: 18px;\n    background-image: url('${favotiteLogoActive}');\n    cursor: pointer;\n`;","import { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { Hotel } from \"../../models/hotel\"\nimport { StarRating } from \"../star-rating/StarRating\"\nimport { FavoriteLogo, FavoriteItemWrapper } from \"./style\"\n\nexport const FavoriteItem = ({options}: {options: Hotel}) => {\n    const {favoriteHotels} = useTypedSelector(state => state.hotelsReducer);\n    const {changeIsFavoriteOnCurrentHotel, removeFavoriteHotels} = useActions();\n\n    const favoriteHandleClicked = (e: any) => {\n        const id = e.target.getAttribute('data-id');\n\n        const filteredHotels = favoriteHotels.filter(favoriteHotel => {\n            return favoriteHotel.id == id;\n        });\n\n        const hotel = filteredHotels[0];\n\n        changeIsFavoriteOnCurrentHotel(hotel.id);\n        removeFavoriteHotels(hotel);\n    }\n\n    return (\n        <FavoriteItemWrapper>\n            <div className='hotel-title'>\n                <p className='hotel-title__name'>\n                    {options.name}\n                </p>\n                <div data-id={options.id} onClick={favoriteHandleClicked}>\n                    <FavoriteLogo data-id={options.id} />\n                </div>\n            </div>\n\n            <div className='hotel-date'>\n                {options.date.day} {options.date.month}, {options.date.year} <span className='dash'>—</span> \n                {options.days == 1 && <span>{options.days} день</span>}\n                {options.days >= 2 && options.days <= 4 && <span>{options.days} дня</span>}\n                {options.days >= 5 && <span>{options.days} дней</span>}\n            </div>\n\n            <div className='hotel-info'>\n                <div className='hotel-controls__stars'>\n                    <StarRating count={options.rating} to={5} />\n                </div>\n                <p className='hotel-info__price'>\n                    Price: <span>{options.price} &#8381; </span>\n                </p>\n            </div>\n        </FavoriteItemWrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/arrow_top_active.2c1a319d.svg\";","export enum HotelsApi {\n    GET_HOTELS = 'https://engine.hotellook.com/api/v2/cache.json',\n}","export default __webpack_public_path__ + \"static/media/arrow_bottom_inactive.fbe09a7e.svg\";","import styled from 'styled-components';\nimport arrowTopActive from '../../assets/images/sort-button/arrow_top_active.svg';\nimport arrowBottomInactive from '../../assets/images/sort-button/arrow_bottom_inactive.svg';\n\nexport const SortButtonWrapper = styled.div<{ isActive: boolean }>`\n    display: flex;\n    align-items: center;\n    width: max-content;\n    padding: 4px 10px 4px 8px;\n    background: #FFFFFF;\n    border: ${props => (props.isActive ? '1px solid #41522E' : '1px solid #E5E5E5')};\n    box-sizing: border-box;\n    border-radius: 4px;\n    font-size: 14px;\n    line-height: 20px;\n    letter-spacing: -0.408px;\n    color: ${props => (props.isActive ? '#41522E' : '#99A0A3')};\n    cursor: pointer;\n    user-select: none;\n`;\n\nexport const SortButtonNav = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    margin-left: 9px;\n    height: 12px;\n`;\n\nexport const SortButtonNavTop = styled.div<{ isActive: boolean }>`\n    width: 9px;\n    height: 5px;\n    background-position: center;\n    background-image: ${props => (props.isActive ? `url('${arrowTopActive}')` : `url('${arrowBottomInactive}')`)};\n    transform: ${props => (props.isActive ? 'rotate(0)' : 'rotate(180deg)')};\n`;\n\nexport const SortButtonNavDown = styled.div<{ isActive: boolean }>`\n    width: 9px;\n    height: 5px;\n    background-position: center;\n    background-image: ${props => (props.isActive ? `url('${arrowTopActive}')` : `url('${arrowBottomInactive}')`)};\n    transform: ${props => (props.isActive ? 'rotate(180deg)' : 'rotate(0)')};\n`;\n\n\nexport const MessageItemText = styled.div<{ isSelf: boolean }>`\n    background-color: ${props => (props.isSelf ? '#d0e8d2' : '#80acc7')};\n    padding: 10px;\n    width: max-content;\n    border-radius: 15px;\n    color: ${props => (props.isSelf ? '#000' : '#fff')}\n`;","import { SornTypeEnum } from \"./enums\"\nimport { SortButtonNav, SortButtonNavDown, SortButtonNavTop, SortButtonWrapper } from \"./style\"\nimport { SortRulesType } from \"./types\";\n\nexport const SortButton = ({name, sort}: {name: string, sort: SornTypeEnum}) => {\n    const activeRules = {\n        button: false,\n        top: false,\n        down: false,\n    } as SortRulesType;\n\n    switch (sort) {\n        case SornTypeEnum.INACTIVE:\n            activeRules.button = false;\n            activeRules.top = false;\n            activeRules.down = false;\n            break;\n        case SornTypeEnum.DOWN:\n            activeRules.button = true;\n            activeRules.top = false;\n            activeRules.down = true;\n            break;\n        case SornTypeEnum.UP:\n            activeRules.button = true;\n            activeRules.top = true;\n            activeRules.down = false;\n            break;\n    }\n\n    return (\n        <SortButtonWrapper isActive={activeRules.button} >\n            <span>\n                {name}\n            </span>\n            <SortButtonNav>\n                <SortButtonNavTop isActive={activeRules.top} />\n                <SortButtonNavDown isActive={activeRules.down} />\n            </SortButtonNav>\n        </SortButtonWrapper>\n    )\n}","import styled from 'styled-components';\n\nexport const FavoritesWrapper = styled.div`\n    background-color: #fff;\n    height: 453px;\n    padding: 32px 10px 32px 32px;\n    border-radius: 16px;\n`;\n\nexport const FavoritesTitle = styled.h2`\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 28px;\n    color: #424242;\n    margin-bottom: 32px;\n`;\n\nexport const FavoritesSorting = styled.div`\n    display: flex;\n    margin-bottom: 32px;\n`;\n\nexport const RatingSorting = styled.div`\n`;\n\nexport const PriceSorting = styled.div`\n    margin-left: 8px;\n`;\n\nexport const FavoritesList = styled.div`\n    max-height: 290px;\n    padding-right: 20px;\n`;\n\nexport const FavoritesItem = styled.div`\n`;","import { useState } from \"react\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { HotelsSortTypes } from \"../../store/reducers/hotels/types\";\nimport { FavoriteItem } from \"../favorite-item/FavoriteItem\";\nimport { SornTypeEnum } from \"../sort-button/enums\";\nimport { SortButton } from \"../sort-button/SortButton\";\nimport { FavoritesList, FavoritesSorting, FavoritesTitle, FavoritesWrapper, PriceSorting, RatingSorting } from \"./style\"\nimport CustomScroll from 'react-custom-scroll';\n\nexport const Favorites = () => {\n    const [ratingSort, setRatingSort] = useState(SornTypeEnum.INACTIVE);\n    const [priceSort, setPriceSort] = useState(SornTypeEnum.INACTIVE);\n\n    const {favoriteHotels} = useTypedSelector(state => state.hotelsReducer);\n    const {sortFavotiteHotelsByRating, sortFavotiteHotelsByPrice} = useActions();\n\n    const ratingClickedHandler = () => {\n        setPriceSort(SornTypeEnum.INACTIVE);\n\n        switch (ratingSort) {\n            case SornTypeEnum.INACTIVE: {\n                sortFavotiteHotelsByRating(HotelsSortTypes.UP);\n                setRatingSort(SornTypeEnum.UP)\n                break;\n            }\n            case SornTypeEnum.DOWN: {\n                sortFavotiteHotelsByRating(HotelsSortTypes.UP);\n                setRatingSort(SornTypeEnum.UP);\n                break;\n            }\n            case SornTypeEnum.UP: {\n                sortFavotiteHotelsByRating(HotelsSortTypes.DOWN);\n                setRatingSort(SornTypeEnum.DOWN);\n                break;\n            }\n        }\n    };\n\n    const priceClickedHandler = () => {\n        setRatingSort(SornTypeEnum.INACTIVE);\n\n        switch (priceSort) {\n            case SornTypeEnum.INACTIVE: {\n                sortFavotiteHotelsByPrice(HotelsSortTypes.UP);\n                setPriceSort(SornTypeEnum.UP);\n                break;\n            }\n            case SornTypeEnum.DOWN: {\n                sortFavotiteHotelsByPrice(HotelsSortTypes.UP);\n                setPriceSort(SornTypeEnum.UP);\n            }\n                break;\n            case SornTypeEnum.UP: {\n                sortFavotiteHotelsByPrice(HotelsSortTypes.DOWN);\n                setPriceSort(SornTypeEnum.DOWN);\n            }\n                break;\n        }\n    };\n\n    return (\n        <FavoritesWrapper>\n            <FavoritesTitle>\n                Избранное\n            </FavoritesTitle>\n            <FavoritesSorting>\n                <RatingSorting onClick={ratingClickedHandler}>\n                    <SortButton name='Рейтинг' sort={ratingSort} />\n                </RatingSorting>\n                <PriceSorting onClick={priceClickedHandler}>\n                    <SortButton name='Цена' sort={priceSort}/>\n                </PriceSorting>\n            </FavoritesSorting>\n            <CustomScroll allowOuterScroll={true}>\n                <FavoritesList>\n                    {\n                        favoriteHotels.map((favoriteHotel, key) => {\n                            return (\n                                <FavoriteItem options={favoriteHotel} key={key}/>\n                            );\n                        })\n                    }\n                </FavoritesList>\n            </CustomScroll>\n        </FavoritesWrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/Vector_home.d7e6c878.svg\";","export default __webpack_public_path__ + \"static/media/Vector_top_arrow.ad44ecdf.svg\";","export default __webpack_public_path__ + \"static/media/Vector_hearth_inactive.a65d2bf1.svg\";","import styled from 'styled-components';\nimport hotelLogo from '../../assets/images/hotel-item/Vector_home.svg';\nimport hotelLogoHeader from '../../assets/images/hotel-item/Vector_top_arrow.svg';\nimport favotiteLogoActive from '../../assets/images/hotel-item/Vector_hearth_active.svg';\nimport favotiteLogoInactive from '../../assets/images/hotel-item/Vector_hearth_inactive.svg';\n\nexport const HotelItemWrapper = styled.div`\n    display: flex;\n    align-items: center;\n    padding: 19px 15px 17px 0;\n    border-bottom: 1px solid rgba(135, 135, 135, 0.2);\n\n    .hotel-logo {\n        position: relative;\n        display: flex;\n        align-items: center;\n        width: 64px;\n        height: 64px;\n        border-radius: 50%;\n        background-color: rgba(65, 82, 46, 0.05);\n        background-image: url('${hotelLogo}');\n        background-repeat: no-repeat;\n        background-position: center;\n        \n    }\n\n    .hotel-logo__home-header {\n        position: absolute;\n        width: 64px;\n        height: 64px;\n        background-image: url('${hotelLogoHeader}');\n        background-repeat: no-repeat;\n        background-position: center;\n        top: -11px;\n        left: 0px;\n    }\n\n    .hotel-info {\n        margin-left: 24px;\n    }\n\n    .hotel-info__name {\n        max-width: 350px;\n        font-weight: 300;\n        font-size: 17px;\n        line-height: 22px;\n        letter-spacing: -0.408px;\n        color: #424242;\n    }\n\n    .hotel-info__date {\n        font-style: normal;\n        font-weight: normal;\n        font-size: 14px;\n        line-height: 22px;   \n        letter-spacing: -0.408px;\n        color: #878787;\n        margin-bottom: 4px;\n    }\n\n    .hotel-info__date .dash {\n        margin-left: 10px;\n        margin-right: 5px;\n    }\n\n    .hotel-controls {\n        display: flex;\n        flex-direction: column;\n        margin-left: auto;\n    }\n\n    .hotel-controls p {\n        font-weight: 300;\n        font-size: 11px;\n        line-height: 22px;\n        letter-spacing: -0.408px;\n        color: #878787;\n    }\n\n    .hotel-controls p span {\n        font-size: 17px;\n        line-height: 22px;\n        text-align: right;\n        letter-spacing: -0.408px;\n        color: #424242;\n        margin-left: 15px;\n    }\n`;\n\nexport const FavoriteLogo = styled.div<{ isActive: boolean }>`\n    align-self: end;\n    width: 21px;\n    height: 18px;\n    background-image: ${props => (props.isActive ? `url(${favotiteLogoActive})` : `url(${favotiteLogoInactive})`)};\n    margin-bottom: 22px;\n    cursor: pointer;\n`;","import { useActions } from \"../../hooks/useActions\"\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\"\nimport { Hotel } from \"../../models/hotel\"\nimport { StarRating } from \"../star-rating/StarRating\"\nimport { FavoriteLogo, HotelItemWrapper } from \"./style\"\n\nexport const HotelItem = ({options}: {options: Hotel}) => {\n    const {currentHotels} = useTypedSelector(state => state.hotelsReducer);\n    const {changeIsFavoriteOnCurrentHotel, addFavoriteHotels, removeFavoriteHotels} = useActions();\n\n    const favoriteHandleClicked = (e: any) => {\n        const id = e.target.getAttribute('data-id');\n\n        const filteredHotels = currentHotels.filter(currenHotel => {\n            return currenHotel.id == id\n        });\n        \n        const hotel = filteredHotels[0];\n\n        if (!hotel.isFavorite) {\n            changeIsFavoriteOnCurrentHotel(hotel.id);\n            addFavoriteHotels(hotel);\n\n            return;\n        }\n\n        changeIsFavoriteOnCurrentHotel(hotel.id);\n        removeFavoriteHotels(hotel);\n    }\n\n    return (\n        <HotelItemWrapper>\n            <div className='hotel-logo'>\n                <div className='hotel-logo__home-header'></div>\n            </div>\n            <div className='hotel-info'>\n                <p className='hotel-info__name'>\n                    {options.name}\n                </p>\n                <p className='hotel-info__date'>\n                    {options.date.day} {options.date.month}, {options.date.year} <span className='dash'>—</span> \n                    {options.days == 1 && <span>{options.days} день</span>}\n                    {options.days >= 2 && options.days <= 4 && <span>{options.days} дня</span>}\n                    {options.days >= 5 && <span>{options.days} дней</span>}\n                </p>\n                <div className='hotel-info__stars'>\n                    <StarRating count={options.rating} to={5} />\n                </div>\n            </div>\n\n            <div className='hotel-controls'>\n                <FavoriteLogo isActive={options.isFavorite} data-id={options.id} onClick={favoriteHandleClicked} />\n                <p>\n                    Price: <span>{options.price} &#8381; </span>\n                </p>\n            </div>\n        </HotelItemWrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/Vector.2919cb40.svg\";","import styled from 'styled-components';\nimport rightArrow from '../../assets/images/hotels-list/Vector.svg';\n\nexport const HotelsListWrapper = styled.div`\n    width: 664px;\n    height: 885px;\n    background-color: #fff;\n    box-shadow: 0px 4px 33px rgba(0, 0, 0, 0.04);\n    border-radius: 16px;\n    padding: 48px 32px;\n`;\n\nexport const HotelsListTitleWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 28px;\n`;\n\nexport const SearchLocationWrapper = styled.div`\n    display: flex;\n    align-items: center;\n`;\n\nexport const SearchLocationText = styled.span`\n    font-weight: 500;\n    font-size: 32px;\n    line-height: 37px;\n`;\n\nexport const ArrivalDate = styled.section`\n    font-weight: normal;\n    font-size: 24px;\n    line-height: 28px;\n    color: #41522E;\n`;\n\nexport const RightArrow = styled.div`\n    height: 17px;\n    width: 9px;\n    padding: 0 20px;\n    background-image: url('${rightArrow}');\n    background-repeat: no-repeat;\n    background-position: center;\n`;\n\nexport const SliderWrapper = styled.div`\n    margin-bottom: 28px;\n`;\n\nexport const FavoritesInfo = styled.div`\n    font-weight: 300;\n    font-size: 17px;\n    line-height: 22px;\n    letter-spacing: -0.408px;\n    margin-bottom: 12px;\n\n    b {\n        margin: 0 4px 0 8px;\n    }\n`;\n\nexport const SearchedHotelsList = styled.div`\n    max-height: 510px;\n    padding: 0 20px 0 0;\n`;\n\nexport const FavoriteLabel = styled.div`\n`;\n\nexport const SearchedHotel = styled.div`\n\n`;","export default __webpack_public_path__ + \"static/media/Rectangle 23.5118c57a.png\";","import styled from 'styled-components';\nimport image1 from '../../assets/images/hotels-slider/Rectangle 23.png';\n\nexport const SliderWrapper = styled.div`\n`;\n\nexport const SliderItemWrapper = styled.div`\n    width: 164px;\n    height: 149px;\n    padding-right: 5px;\n`;\n\nexport const SliderItem = styled.div<{ image: string }>`\n    width: 164px;\n    height: 149px;\n    background-image: ${props => (props.image ? `url('${props.image}')` : `url('${image1}')`)};\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center;\n`;\n\n","export default __webpack_public_path__ + \"static/media/Rectangle 24.e529f33d.png\";","export default __webpack_public_path__ + \"static/media/Rectangle 28.5a96d000.png\";","export default __webpack_public_path__ + \"static/media/Rectangle 29.5118c57a.png\";","import Slider from \"react-slick\";\nimport { SliderWrapper } from \"../hotels-list/style\";\nimport { SliderItem, SliderItemWrapper } from \"./style\";\nimport image1 from '../../assets/images/hotels-slider/Rectangle 23.png';\nimport image2 from '../../assets/images/hotels-slider/Rectangle 24.png';\nimport image3 from '../../assets/images/hotels-slider/Rectangle 28.png';\nimport image4 from '../../assets/images/hotels-slider/Rectangle 29.png';\n\nexport const HotelsSlider = () => {\n    const settings = {\n        dots: false,\n        infinite: true,\n        arrows: false,\n        speed: 500,\n        variableWidth: true,\n        slidesToScroll: 1\n    };\n\n    const images = [image1, image2, image3, image4];\n\n    return (\n        <SliderWrapper>\n            <Slider {...settings}>\n                {\n                    images.map((image, key) => {\n                        return (\n                            <SliderItemWrapper key={key}>\n                                <SliderItem image={image}/>\n                            </SliderItemWrapper>\n                        );\n                    })\n                }\n            </Slider>\n        </SliderWrapper>\n    )\n}","import { Auth } from '../pages/Auth';\nimport { Hotels } from '../pages/hotels/Hotels';\n\nexport interface Routes {\n    path: string;\n    component: React.ComponentType;\n    exact?: boolean;\n}\n\nexport enum RouteNames {\n    AUTH = '/auth',\n    HOTELS = '/hotels',\n}\n\nexport const publicRoutes: Routes[] = [\n    {\n        path: RouteNames.AUTH,\n        exact: true,\n        component: Auth\n    }\n];\n\nexport const privateRoutes: Routes[] = [\n    {\n        path: RouteNames.HOTELS,\n        exact: true,\n        component: Hotels\n    },\n];","import axios, { AxiosResponse } from \"axios\";\nimport { HotelsApi } from \"../constants\";\nimport { GetHotelsResponse } from \"./types\";\n\nexport default class HotelService {\n    static async getHotels(location: string, checkIn: string, checkOut: string): Promise<AxiosResponse<GetHotelsResponse[]>> {\n        return axios.get<GetHotelsResponse[]>(`${HotelsApi.GET_HOTELS}?location=${location}&currency=rub&checkIn=${checkIn}&checkOut=${checkOut}&limit=10`);\n    }\n}","import { HotelItem } from \"../hotel-item/HotelItem\";\nimport { HotelsSlider } from \"../hotels-slider/HotelsSlider\";\nimport CustomScroll from 'react-custom-scroll';\nimport { ArrivalDate, FavoritesInfo, HotelsListTitleWrapper, HotelsListWrapper, RightArrow, SearchedHotel, SearchedHotelsList, SearchLocationText, SearchLocationWrapper, SliderWrapper } from \"./style\";\nimport moment from \"moment\";\nimport 'moment/locale/ru';\nimport { useEffect } from \"react\";\nimport HotelService from \"../../api/HotelsService\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport { useActions } from \"../../hooks/useActions\";\nimport { Hotel } from \"../../models/hotel\";\nimport { HotelItemType } from \"../hotel-item/types\";\n\nexport const HotelsList = () => {\n    moment.locale('ru');\n    const todayDateRu = moment().format('D MMMM YYYY');\n\n    const todayDate = moment().format('YYYY-MM-D');\n    const tomorrowDate = moment().add(1, 'days').format('YYYY-MM-D');\n\n    const {currentHotels, location, favoriteHotels} = useTypedSelector(state => state.hotelsReducer);\n    const {setCurrentHotels, setLocation} = useActions();\n\n    useEffect(() => {\n        (async () => {\n            const response = await HotelService.getHotels('Moscow', todayDate, tomorrowDate);\n            const responseHotels = response.data;\n            const hotels: Hotel[] = [] as Hotel[];\n\n            responseHotels.forEach(responseHotel => {\n                moment.locale('en');\n                const day = moment().format('D');\n                const month = moment().format('MMMM');\n                const year = moment().format('YYYY');\n\n                hotels.push({\n                    id: responseHotel.hotelId,\n                    name: responseHotel.hotelName,\n                    date: {\n                        day: day,\n                        month: month,\n                        year: year,\n                    },\n                    days: 1,\n                    rating: responseHotel.stars,\n                    price: responseHotel.priceAvg,\n                    isFavorite: false,\n                });\n            });\n\n            setCurrentHotels(hotels);\n            setLocation('Москва');\n        })();\n    }, []);\n\n    return (\n        <HotelsListWrapper>\n            <HotelsListTitleWrapper>\n                <SearchLocationWrapper>\n                    <SearchLocationText>\n                        Отели\n                    </SearchLocationText>\n                    <RightArrow />\n                    <SearchLocationText>\n                        {location}\n                    </SearchLocationText>\n                </SearchLocationWrapper>\n                <ArrivalDate>\n                    {todayDateRu}\n                </ArrivalDate>\n            </HotelsListTitleWrapper>\n            <SliderWrapper>\n                <HotelsSlider />\n            </SliderWrapper>\n            <FavoritesInfo>\n                Добавлено в Избранное:\n                { favoriteHotels.length < 1 && <span><b>{favoriteHotels.length}</b>отелей</span> }\n                { favoriteHotels.length == 1 && <span><b>{favoriteHotels.length}</b>отель</span> }\n                { favoriteHotels.length > 1 && favoriteHotels.length < 5 && <span><b>{favoriteHotels.length}</b>отеля</span> }\n                { favoriteHotels.length > 4 && <span><b>{favoriteHotels.length}</b>отелей</span> }\n            </FavoritesInfo>\n            <CustomScroll allowOuterScroll={true}>\n                <SearchedHotelsList>\n                    <SearchedHotel>\n                        {\n                            currentHotels.map((currentHotel, key) => {\n                                return (\n                                    <HotelItem options={currentHotel} key={key} />\n                                );\n                            })\n                        }\n                    </SearchedHotel>\n                </SearchedHotelsList>\n            </CustomScroll>\n        </HotelsListWrapper>\n    )\n}","export default __webpack_public_path__ + \"static/media/Vector (2).67ebd591.svg\";","export default __webpack_public_path__ + \"static/media/Vector (1).f8c366c6.svg\";","export default __webpack_public_path__ + \"static/media/Vector (3).b90069b8.svg\";","import styled from 'styled-components';\nimport arrow from '../../assets/images/navbar/Vector (2).svg';\nimport bracket from '../../assets/images/navbar/Vector (1).svg';\nimport line from '../../assets/images/navbar/Vector (3).svg';\n\nexport const NavbarWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 32px;\n`;\n\nexport const NavbarTitle = styled.h1`\n    font-weight: 500;\n    font-size: 24px;\n    line-height: 28px;\n    display: flex;\n    align-items: center;\n    color: #424242;\n`;\n\nexport const LogoutWrapper = styled.div`\n    position: relative;\n    width: 80px;\n    font-size: 16px;\n    line-height: 20px;\n    letter-spacing: -0.408px;\n    color: #41522E;\n    cursor: pointer;\n`;\n\nexport const Arrow = styled.div`\n    position: absolute;\n    width: 6px;\n    height: 14px;\n    top: 3px;\n    right: 0px;\n    background-image: url('${arrow}');\n    background-position: center;\n    background-size: cover;\n`;\n\nexport const Bracket = styled.div`\n    position: absolute;\n    width: 10px;\n    height: 19px;\n    right: 12px;\n    top: 0;\n    background-image: url('${bracket}');\n    background-position: center;\n    background-size: cover;\n`;\n\nexport const Line = styled.div`\n    position: absolute;\n    width: 12px;\n    height: 4px;\n    top: 8px;\n    right: 2px;\n    background-image: url('${line}');\n    background-position: center;\n    background-size: cover;\n`;","import { useActions } from \"../../hooks/useActions\";\nimport { Arrow, Bracket, Line, LogoutWrapper, NavbarTitle, NavbarWrapper } from \"./style\"\n\nexport const Navbar = () => {\n    const { logout } = useActions();\n\n    const logoutHandler = () => {\n        logout();\n    }\n\n    return (\n        <NavbarWrapper>\n            <NavbarTitle>\n                Simple Hotel Check\n            </NavbarTitle>\n            <LogoutWrapper onClick={logoutHandler}>\n                <span>\n                    Выйти\n                </span>\n                <Arrow />\n                <Bracket />\n                <Line />\n            </LogoutWrapper>\n        </NavbarWrapper>\n    )\n}","import styled from 'styled-components';\n\nexport const SearchFormWrapper = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    width: 360px;\n    height: 410px;\n    border-radius: 16px;\n    padding: 32px;\n    background-color: #fff;\n`;\n\nexport const SearchFromInput = styled.input`\n    height: 50px;\n    border: 1px solid #C9CACC;\n    border-radius: 4px;\n    padding: 16px;\n    font-weight: 300;\n    font-size: 16px;\n`;\n\nexport const SearchFromInputWrapper = styled.div`\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n    border-radius: 4px;\n    margin-bottom: 20px;\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n    input[type='number'] {\n        -moz-appearance: textfield;\n    }\n    input[type=number]::-webkit-inner-spin-button,\n    input[type=number]::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n    }\n`;\n\nexport const SearchFormError = styled.span`\n    position: absolute;\n    bottom: -16px;\n    font-size: 12px;\n    color: red;\n`;\n\nexport const SearchFromLabel = styled.label`\n    margin-bottom: 7px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 19px;\n    color: #424242;\n`;\n\nexport const SearchFromButton = styled.button`\n    font-family: Roboto;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 50px;\n    background: linear-gradient(104.34deg, #41522E -15.34%, #BE8022 145.95%);\n    color: #fff;\n    border-radius: 4px;\n    font-weight: 500;\n    font-size: 16px;\n    line-height: 20px;\n    cursor: pointer;\n`;  ","import { SearchFormError, SearchFormWrapper, SearchFromButton, SearchFromInput, SearchFromInputWrapper, SearchFromLabel } from \"./style\";\nimport { useForm, SubmitHandler} from 'react-hook-form';\nimport { SearchFormType } from \"./types\";\nimport { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport HotelService from \"../../api/HotelsService\";\nimport { Hotel } from \"../../models/hotel\";\nimport { useActions } from \"../../hooks/useActions\";\n\nexport const SearchForm = () => {\n    const { register, handleSubmit, formState: { errors } } = useForm();\n    const [daysCount, setDaysCount] = useState('');\n    const [dateError, setDateError] = useState(false);\n    const {setCurrentHotels, setLocation} = useActions();\n    const todayDate = moment().format('YYYY-MM-D');\n\n    const formSubmit:  SubmitHandler<SearchFormType> = async (e: any) => {\n        const checkOut = moment(e.date).add(e.days, 'days').format('YYYY-MM-D');\n\n        const response = await HotelService.getHotels(e.location, e.date, checkOut);\n        const responseHotels = response.data;\n        const hotels: Hotel[] = [] as Hotel[];\n\n        responseHotels.forEach(responseHotel => {\n            moment.locale('en');\n            const day = moment(e.date).format('D');\n            const month = moment(e.date).format('MMMM');\n            const year = moment(e.date).format('YYYY');\n\n            hotels.push({\n                id: responseHotel.hotelId,\n                name: responseHotel.hotelName,\n                date: {\n                    day: day,\n                    month: month,\n                    year: year,\n                },\n                days: e.days,\n                rating: responseHotel.stars,\n                price: responseHotel.priceAvg,\n                isFavorite: false,\n            });\n        });\n\n        setCurrentHotels(hotels);\n        setLocation(e.location);\n    }\n\n    const formDateChangeHandler = (e: any) => {\n        const isBefore = (moment(e.target.value).add(1, 'days').isAfter(todayDate));\n\n        if (!isBefore) {\n            setDateError(true);\n\n            return;\n        }\n\n        setDateError(false);\n    }\n\n    return (\n        <SearchFormWrapper onSubmit={handleSubmit(formSubmit)}>\n            <SearchFromInputWrapper>\n                <SearchFromLabel>\n                    Локация\n                </SearchFromLabel>\n                <SearchFromInput \n                    {\n                        ...register(\n                            'location',\n                            {\n                                required: true,\n                            }\n                        )\n                    }\n                />\n            </SearchFromInputWrapper>\n\n            <SearchFromInputWrapper>\n                <SearchFromLabel>\n                    Дата заселения\n                </SearchFromLabel>\n                <SearchFromInput \n                    type=\"date\"\n                    className=\"date-input\"\n                    {\n                        ...register(\n                            'date',\n                            {\n                                required: true,\n                            }\n                        )\n                    }\n                    min={todayDate}\n                    onChange={formDateChangeHandler}\n                />\n                {\n                    dateError && \n                    <SearchFormError>\n                        Некорректная дата\n                    </SearchFormError>\n                }\n            </SearchFromInputWrapper>\n\n            <SearchFromInputWrapper>\n                <SearchFromLabel>\n                    Количество дней\n                </SearchFromLabel>\n                <SearchFromInput \n                    {\n                        ...register(\n                            'days',\n                            {\n                                required: true,\n                            }\n                        )\n                    }\n                    onChange={(e) => {\n                        const isNumberMatch = e.target.value.match(/^[0-9]+$/);\n\n                        if (isNumberMatch) {\n                            setDaysCount(isNumberMatch[0]);\n                        }\n\n                        if (e.target.value === '') {\n                            setDaysCount('');\n                        }\n                    }}\n                    value={daysCount}\n                />\n            </SearchFromInputWrapper>\n\n            <SearchFromButton type=\"submit\">\n                Найти\n            </SearchFromButton>\n        </SearchFormWrapper>\n    )\n}","import styled from 'styled-components';\n\nexport const HotelsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n    background-clip: #E5E5E5;\n    background-color: #E5E5E5;\n    padding: 32px;\n`;\n\nexport const HotelsWrapper = styled.div`\n    display: flex;\n    row-gap: 24px;\n    column-gap: 24px;\n`;\n\nexport const LeftSide = styled.div`\n    display: flex;\n    flex-direction: column;\n    row-gap: 24px;\n`;\n\nexport const RightSide = styled.div`\n`;\n\nexport const Container = styled.div`\n    width: 1048px;\n    margin: 0 auto;\n`;","import { FC } from 'react';\nimport { Login } from '../components/login/Login'\n\nexport const Auth: FC = () => {\n    return (\n        <Login />\n    )\n}","import moment from 'moment';\nimport { FC } from 'react';\nimport { Favorites } from '../../components/favorites/Favorites';\nimport { HotelsList } from '../../components/hotels-list/HotelsList';\nimport { Navbar } from '../../components/navbar/Navbar';\nimport { SearchForm } from '../../components/search-form/SearchForm';\nimport { Container, HotelsContainer, HotelsWrapper, LeftSide, RightSide } from './style';\n\nexport const Hotels: FC = () => {\n    return (\n        <HotelsContainer>   \n            <Navbar />\n            <Container>\n                <HotelsWrapper>\n                    <LeftSide>\n                        <SearchForm />\n                        <Favorites />\n                    </LeftSide>\n                    <RightSide>\n                        <HotelsList />  \n                    </RightSide>\n                </HotelsWrapper>\n            </Container>\n        </HotelsContainer>\n    )\n}","import { Redirect, Route, Switch } from 'react-router';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { privateRoutes, publicRoutes, RouteNames } from '../router';\n\nexport const AppRouter = () => {\n    const { isAuth } = useTypedSelector(state => state.authReducer);\n\n    return (\n        isAuth\n            ?\n            <Switch>\n                {privateRoutes.map(route =>\n                    <Route \n                        path={route.path}\n                        exact={route.exact}\n                        component={route.component}\n                        key={route.path}\n                    />\n                )}\n                <Redirect to={RouteNames.HOTELS}></Redirect>\n            </Switch>\n            :\n            <Switch>\n                {publicRoutes.map(route => \n                        <Route \n                            path={route.path}\n                            exact={route.exact}\n                            component={route.component}\n                            key={route.path}\n                        />\n                    )\n                })\n                <Redirect to={RouteNames.AUTH}></Redirect>\n            </Switch>\n    )\n}","import { useEffect } from 'react';\nimport { AppRouter } from './components/AppRouter';\nimport { useActions } from './hooks/useActions';\n\nexport const App = () => {\n    const { setIsAuth } = useActions();\n\n    useEffect(() => {\n        if (localStorage.getItem('isAuth') === 'true') {\n            setIsAuth(true);\n        }\n    }, []);\n\n    return (\n        <AppRouter />\n    );\n}","import { Hotel } from \"../../../models/hotel\";\nimport { HotelsAction, HotelsActionEnum, HotelsSortTypes, HotelsState } from \"./types\";\n\nconst initialState: HotelsState = {\n    currentHotels: [] as Hotel[],\n    favoriteHotels: [] as Hotel[],\n    location: '',\n}\n\nexport default function hotelsReducer(state = initialState, action: HotelsAction): HotelsState {\n    switch (action.type) {\n        case HotelsActionEnum.SET_CURRENT_HOTELS:\n            return {...state, currentHotels: action.payload}\n        case HotelsActionEnum.SET_FAVORITE_HOTELS:\n            return {...state, favoriteHotels: action.payload}\n        case HotelsActionEnum.ADD_FAVORITE_HOTEL: \n            return {...state, favoriteHotels: [...state.favoriteHotels, action.payload]}\n        case HotelsActionEnum.REMOVE_FAVORITE_HOTEL: \n            return {...state, favoriteHotels: state.favoriteHotels.filter(hotel => hotel.id != action.payload.id)}\n        case HotelsActionEnum.CHANGE_IS_FAVORITE_ON_CURRENT_HOTEL: {\n            const updatedHotels = state.currentHotels.map(currentHotel => {\n                if (currentHotel.id == action.payload) {\n                    return {...currentHotel, isFavorite: !currentHotel.isFavorite}\n                }\n\n                return currentHotel;\n            });\n\n            return {...state, currentHotels: updatedHotels}\n        }\n        case HotelsActionEnum.SORT_FAVORITE_HOTELS_BY_RATING: \n            return {...state, favoriteHotels: state.favoriteHotels.sort((a: Hotel, b: Hotel) => {\n                if (action.payload === HotelsSortTypes.DOWN) {\n                    return a.rating - b.rating;\n                }\n\n                return b.rating - a.rating;\n            })\n        }\n        case HotelsActionEnum.SORT_FAVORITE_HOTELS_BY_PRICE: \n            return {...state, favoriteHotels: state.favoriteHotels.sort((a: Hotel, b: Hotel) => {\n                if (action.payload === HotelsSortTypes.DOWN) {\n                    return a.price - b.price;\n                }\n\n                return b.price - a.price;\n            })\n        }\n        case HotelsActionEnum.SET_LOCATION:\n            return {...state, location: action.payload}\n        default:\n            return state;\n    }\n}","import { AuthAction, AuthActionEnum, AuthState } from \"./types\";\n\nconst initialState: AuthState = {\n    isAuth: false,\n}\n\nexport default function authReducer(state = initialState, action: AuthAction): AuthState {\n    switch (action.type) {\n        case AuthActionEnum.SET_AUTH:\n            return {...state, isAuth: action.payload}\n        default:\n            return state;\n    }\n}","import hotelsReducer from \"./hotels\";\nimport authReducer from \"./auth\";\n\nexport default {\n    hotelsReducer,\n    authReducer\n}","import { put } from \"redux-saga/effects\";\nimport { login, logout } from \".\";\nimport { AuthActionCreators } from \"../../store/reducers/auth/action-creators\";\n\nexport function* loginWorker() {\n    yield login();\n    yield put(AuthActionCreators.setIsAuth(true))\n};\n\nexport function* logoutWorker() {\n    yield logout();\n    yield put(AuthActionCreators.setIsAuth(false));\n};","export const login = () => {\n    localStorage.setItem('isAuth', 'true');\n}\n\nexport const logout = () => {\n    localStorage.setItem('isAuth', '');\n}","import { takeEvery } from \"@redux-saga/core/effects\"\nimport { AuthActionEnum } from \"../../store/reducers/auth/types\"\nimport { loginWorker, logoutWorker } from \"./workers\"\n\nexport function* authWatcher() {\n    yield takeEvery(AuthActionEnum.LOGIN, loginWorker)\n    yield takeEvery(AuthActionEnum.LOGOUT, logoutWorker)\n}","import {all} from \"redux-saga/effects\"\nimport { authWatcher } from \"./auth/watchers\"\n\nexport function* rootWatcher() {\n    yield all([authWatcher()])\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport reducers from \"./reducers\";  \nimport createSagaMiddleware from 'redux-saga';\nimport { rootWatcher } from '../saga';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst rootReducer = combineReducers(reducers);\n\nexport const store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nsagaMiddleware.run(rootWatcher)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}